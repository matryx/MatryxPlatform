q = []

q.push("system = contract(MatryxSystem.address, MatryxSystem)")
q.push("system.createVersion(1)")
q.push("system.setVersion(1)")

q.push("system.setContract(1, stb('MatryxPlatform'), MatryxPlatform.address)")
q.push("system.setContractType(MatryxPlatform.address, 1)")

q.push("system.setContract(1, stb('MatryxUser'), MatryxUser.address)")
q.push("system.setContractType(MatryxUser.address, 2)")

q.push("system.setContract(1, stb('MatryxCommit'), MatryxCommit.address)")
q.push("system.setContractType(MatryxCommit.address, 3)")

q.push("system.setContract(1, stb('LibPlatform'), LibPlatform.address)")
q.push("system.setContract(1, stb('LibUser'), LibUser.address)")
q.push("system.setContract(1, stb('LibCommit'), LibCommit.address)")
q.push("system.setContract(1, stb('LibTournament'), LibTournament.address)")
q.push("system.setContract(1, stb('LibRound'), LibRound.address)")

q.push("system.setLibraryName(0, stb('LibPlatform'))")
q.push("system.setLibraryName(1, stb('LibPlatform'))")
q.push("system.setLibraryName(2, stb('LibUser'))")
q.push("system.setLibraryName(3, stb('LibCommit'))")
q.push("system.setLibraryName(4, stb('LibTournament'))")
q.push("system.setLibraryName(5, stb('LibRound'))")


// MatryxCommit.getCommit
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x8784ea96', ['0x2d548a40', [3], []])")
// MatryxCommit.getCommitByContentHash
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xbe74b5d5', ['0x4948cc67', [3], []])")
// MatryxCommit.getInitialCommits
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x63b8c396', ['0x178a1915', [3], []])")
// MatryxCommit.getAllGroups
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x21cd3cae', ['0x19107167', [3], []])")
// MatryxCommit.getGroupName
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x091977df', ['0x9a1d5544', [3], []])")
// MatryxCommit.getGroupMembers
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x02750201', ['0xad737b54', [3], [0]])")
// MatryxCommit.getRoundsSubmittedTo
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xde838917', ['0x02546e6a', [3], []])")
// MatryxCommit.createGroup
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xdc2ddcae', ['0x6ed34c7e', [3], [0]])")
// MatryxCommit.requestToJoinGroup
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xcf1f2d14', ['0xc1291fff', [3], [0]])")
// MatryxCommit.addGroupMember
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xfb02cfa8', ['0xb009f19d', [3], [0]])")
// MatryxCommit.claimCommit
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x1c7cf44c', ['0x646c9101', [3], []])")
// MatryxCommit.revealCommit
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x82ccfa89', ['0x0f65549f', [0,3], [5]])")
// MatryxCommit.commit
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x749c85c3', ['0x7c74612f', [0,3], [4]])")
// MatryxCommit.fork
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x1e38bb28', ['0xb5215f33', [0,3], [4]])")
// MatryxCommit.submitToTournament
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0x064699d8', ['0x1f75d59d', [0,3], [10]])")
// MatryxCommit.getAvailableRewardForUser
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xd1587a18', ['0x4f4abca8', [3], []])")
// MatryxCommit.withdrawAvailableReward
q.push("system.addContractMethod(1, stringToBytes('LibCommit'), '0xb66f39ad', ['0xa9a983a3', [0,3], []])")

// MatryxPlatform.isTournament
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0xe10f1b06', ['0xcda2084d', [3], []])")
// MatryxPlatform.isRound
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x8c1fc0bb', ['0x1886dbb4', [3], []])")
// MatryxPlatform.hasEnteredMatryx
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x7a348ab3', ['0x2ace6c70', [3], []])")
// MatryxPlatform.getTotalBalance
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x12b58349', ['0x7f279bd0', [3], []])")
// MatryxPlatform.getBalanceOf
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x9b96eece', ['0xcd32526d', [3], []])")
// MatryxPlatform.getCommitBalance
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0xbc8b0e5a', ['0x3c0e0f55', [3], []])")
// MatryxPlatform.getTournamentCount
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x078c51f0', ['0x54b73af5', [3], []])")
// MatryxPlatform.getUserCount
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0xb5cb15f7', ['0xcaa6f75a', [3], []])")
// MatryxPlatform.getTournaments
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0xf7f20cb3', ['0x275111eb', [3], []])")
// MatryxPlatform.getUsers
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x00ce8e3e', ['0x7cc0c79b', [3], []])")
// MatryxPlatform.withdrawBalance
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x5fd8c710', ['0x1a55132c', [0,3], []])")
// MatryxPlatform.enterMatryx
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x91e8cc3f', ['0x5a88223c', [0,3], []])")
// MatryxPlatform.createTournament
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0xd543ce37', ['0x3a1f7ffd', [0,3], []])")
// MatryxPlatform.setCommitDistributionDepth
q.push("system.addContractMethod(1, stringToBytes('LibPlatform'), '0x7bdec98c', ['0xe91bd88b', [0,3], []])")

// MatryxRound.getVersion
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x0d8e6e2c', ['0x15bd7b01', [3], []])")
// MatryxRound.getTournament
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0xe76c293e', ['0x19820bce', [3], []])")
// MatryxRound.getStart
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0xc5292c67', ['0xaf8c54e5', [3], []])")
// MatryxRound.getEnd
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x9f05a36d', ['0x6ff732f9', [3], []])")
// MatryxRound.getReview
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0xa73a4aaf', ['0xc73d4968', [3], []])")
// MatryxRound.getBounty
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0xf49bff7b', ['0x7cc0c3b9', [3], []])")
// MatryxRound.getBalance
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x12065fe0', ['0x8a1250dd', [3], []])")
// MatryxRound.getSubmission
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x756dd3a4', ['0x348785e9', [3], []])")
// MatryxRound.getSubmissions
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x54f6aa20', ['0x40721539', [3], []])")
// MatryxRound.getData
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x3bc5de30', ['0x412559e1', [3], []])")
// MatryxRound.getSubmissionCount
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x9999d2ae', ['0xed7c9de9', [3], []])")
// MatryxRound.getWinningSubmissions
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0xc3ae985f', ['0x15c8e3bc', [3], []])")
// MatryxRound.getState
q.push("system.addContractMethod(1, stringToBytes('LibRound'), '0x1865c57d', ['0xb5413d67', [3], []])")


// MatryxTournament.getVersion
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x0d8e6e2c', ['0x15bd7b01', [3], []])")
// MatryxTournament.getOwner
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x893d20e8', ['0xc40c4371', [3], []])")
// MatryxTournament.getTitle
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xff3c1a8f', ['0xa35d9e78', [3], []])")
// MatryxTournament.getDescriptionHash
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x245edf06', ['0x61f08a3d', [3], []])")
// MatryxTournament.getEntryFee
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xe586a4f0', ['0x10206095', [3], []])")
// MatryxTournament.getRounds
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x6984d070', ['0x6852c33e', [3], []])")
// MatryxTournament.getDetails
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xfbbf93a0', ['0xba90b857', [3], []])")
// MatryxTournament.getBalance
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x12065fe0', ['0x8a1250dd', [3], []])")
// MatryxTournament.getState
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x1865c57d', ['0xb5413d67', [3], []])")
// MatryxTournament.getCurrentRound
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xa32bf597', ['0x82b45813', [3], []])")
// MatryxTournament.getSubmissionCount
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x9999d2ae', ['0xed7c9de9', [3], []])")
// MatryxTournament.getEntrantCount
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x790b6209', ['0x6f5de052', [3], []])")
// MatryxTournament.getEntryFeePaid
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xdca0f3ef', ['0x8a57f372', [3], []])")
// MatryxTournament.isEntrant
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x52c01fab', ['0xb419874a', [3], []])")
// MatryxTournament.enter
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xe97dcb62', ['0x19fe07db', [0,3], []])")
// MatryxTournament.exit
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xe9fad8ee', ['0x22fb9c1e', [0,3], []])")
// MatryxTournament.createRound
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xe1226bb1', ['0xca0ba8b4', [0,3], []])")
// MatryxTournament.createSubmission
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xb1474678', ['0xa6b7ee0e', [3], []])")
// MatryxTournament.updateDetails
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xf0ac5afd', ['0xb4835ebe', [0,3], []])")
// MatryxTournament.addFunds
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xbe999705', ['0x6e6661aa', [0,3], []])")
// MatryxTournament.transferToRound
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xa84fa137', ['0x86f7b75f', [0,3], []])")
// MatryxTournament.selectWinners
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x9e4ce509', ['0x8fd2c899', [0,3], [0]])")
// MatryxTournament.updateNextRound
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x6c87da28', ['0x6892107c', [0,3], []])")
// MatryxTournament.startNextRound
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x3c3ccc44', ['0xfab2d488', [3], []])")
// MatryxTournament.withdrawFromAbandoned
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x542fe6c2', ['0xf7230424', [0,3], []])")
// MatryxTournament.closeTournament
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0x39900857', ['0xbc04601c', [0,3], []])")
// MatryxTournament.recoverFunds
q.push("system.addContractMethod(1, stringToBytes('LibTournament'), '0xb79550be', ['0x77f3fbdc', [0,3], []])")

// MatryxUser.getData
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0x38266b22', ['0xc7ef5c16', [3], []])")
// MatryxUser.getTimeInMatryx
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0x83ec507e', ['0x923c77e7', [3], []])")
// MatryxUser.getTotalSpent
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0x02c81f82', ['0xd0509905', [3], []])")
// MatryxUser.getTotalWithdrawn
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0xb1c7a20f', ['0x8f3906ed', [3], []])")
// MatryxUser.getTournaments
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0x726ec8f0', ['0x78f78cac', [3], []])")
// MatryxUser.getTournamentsEntered
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0xf343eb96', ['0x374c9653', [3], []])")
// MatryxUser.getSubmissions
q.push("system.addContractMethod(1, stringToBytes('LibUser'), '0xbdbd3583', ['0x80a762ca', [3], []])")


q.push("c = contract(MatryxCommit.address, IMatryxCommit)")
q.push("p = contract(MatryxPlatform.address, IMatryxPlatform)")

q.push("token = contract(network.tokenAddress, MatryxToken)")
q.push("token.setReleaseAgent(network.accounts[0])")
q.push("token.releaseTokenTransfer()")
q.push("token.mint(network.accounts[0], toWei(1e4))")
q.push("token.mint(network.accounts[1], toWei(1e4))")
q.push("token.mint(network.accounts[2], toWei(1e4))")
q.push("token.mint(network.accounts[3], toWei(1e4))")
q.push("token.mint(network.accounts[4], toWei(1e4))")

;(async () => { for (let cmd of q) try { await eval(cmd) } catch (err) { console.log(err) } })()
